@import "../style/base";
@import "./input-vars";

:host {
	--_input-state-color: #{$input-color-inactive};
	//--_input-border-color: #{$input-color-inactive};
	--_input-padding-left-right: #{$input-padding-left-right};
	--_input-bg: #{$input-bg};
	--_input-border-radius: 0;

	transform: translateZ(0);
	display: block;
	outline: none;
}

:host([disabled]) {
	pointer-events: none;
}

#container {
	background: var(--_input-bg);
	border-radius: var(--_input-border-radius);
	font-size: #{$input-font-size};
	font-family: #{$input-font-family};
	border-bottom: #{$input-ruler-height} solid var(--_input-state-color);
	transition: #{$input-transition};
	position: relative;
	display: flex;
	align-items: center;
	overflow: hidden;
}

#wrapper {
	position: relative;
	flex-grow: 1;
}

#ruler {
	background: #{$input-color-active};
	height: #{$input-ruler-height};
	transition: #{$input-ruler-transition};
	top: 100%;
	width: 100%;
	transform: scaleX(0);
	position: absolute;
}

#placeholder {
	left: var(--_input-padding-left-right);
	color: #{$input-placeholder-color};
	transition: #{$input-placeholder-transition};
	font-family: #{$input-font-family};

	top: 50%;
	transform: translateY(-50%);

	z-index: 1;
	position: absolute;
	pointer-events: none;
	font-size: inherit;
	line-height: 1;
	white-space: nowrap;
}

:host(:hover) {
	--_input-state-color: #{$input-color-hover};
}

:host([filled]), :host([outlined]) {
	--_input-padding-left-right: #{$input-padding-left-right-outlined};
}

:host([filled]) {
	--_input-border-radius: #{$input-border-radius-filled};
	--_input-bg: #{$input-bg-filled};
}

:host([filled]:hover) {
	--_input-bg: #{$input-bg-filled-hover};
}

:host([outlined]) {
	--_input-border-radius: #{$input-border-radius-outlined};

	#container {
		border: #{$input-ruler-height} solid var(--_input-state-color);
	}

	#ruler {
		display: none;
	}
}

:host(:not([outlined]):focus-within) {
	#container {
		border-bottom-color: #{$input-color-hover};
	}
}

:host(:focus-within) {
	--_input-state-color: #{$input-color-active};

	#ruler {
		transform: scaleX(1);
	}
}


:host([dirty]), :host(:focus-within), :host([type="color"]), :host([type="date"]), :host([type="file"]) {
	#placeholder {
		font-size: #{$input-placeholder-font-size};
		top: #{$input-padding-top-bottom};
		transform: translateY(0);
	}
}

::slotted(input), ::slotted(textarea), ::slotted(select) {
	caret-color: var(--_input-color-state);
	padding: #{$input-padding-top-bottom} var(--_input-padding-left-right);
	font-family: #{$input-font-family};
	font-size: #{$input-font-size};
	@include reset();

	-webkit-overflow-scrolling: touch;
	position: relative;
	appearance: none;
	border: none;
	outline: none;
	margin: 0;
	background: transparent;
	width: 100%;

	// Remove ugly autofill
	&:-webkit-autofill {
		-webkit-outlined-shadow: 0 0 0px 9999px white inset !important;
	}
}

:host([placeholder]) {
	::slotted(input), ::slotted(textarea), ::slotted(select) {
		padding-top: calc(#{$input-padding-top-bottom} + #{$input-placeholder-space});
	}
}

:host([invalid]) {
	--_input-state-color: #{$input-color-invalid};
}

::slotted(input[type="color"]) {
	height: #{size(60)};
	cursor: pointer;

	&::-webkit-color-swatch-wrapper {
		padding: 0;
	}

	&::-webkit-color-swatch {
		border: none;
	}
}

::slotted([slot="before"]), ::slotted([slot="after"]) {
	color: #{$input-before-after-color};
}

// When there are no padding on the input we add margin on the slots
:host(:not([outlined]):not([filled])) {
	::slotted([slot="before"]) {
		margin-right: #{$input-padding-left-right-outlined};
	}

	::slotted([slot="after"]) {
		margin-left: #{$input-padding-left-right-outlined};
	}
}

:host([outlined]), :host([filled]) {
	::slotted([slot="before"]) {
		margin-left: #{$input-padding-left-right-outlined};
	}

	::slotted([slot="after"]) {
		margin-right: #{$input-padding-left-right-outlined};
	}
}

